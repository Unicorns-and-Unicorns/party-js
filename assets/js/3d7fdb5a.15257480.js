(self.webpackChunkparty_js_docs=self.webpackChunkparty_js_docs||[]).push([[1857],{3905:function(t,e,r){"use strict";r.d(e,{Zo:function(){return s},kt:function(){return m}});var n=r(7294);function o(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function a(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function i(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?a(Object(r),!0).forEach((function(e){o(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function l(t,e){if(null==t)return{};var r,n,o=function(t,e){if(null==t)return{};var r,n,o={},a=Object.keys(t);for(n=0;n<a.length;n++)r=a[n],e.indexOf(r)>=0||(o[r]=t[r]);return o}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(n=0;n<a.length;n++)r=a[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(o[r]=t[r])}return o}var c=n.createContext({}),u=function(t){var e=n.useContext(c),r=e;return t&&(r="function"==typeof t?t(e):i(i({},e),t)),r},s=function(t){var e=u(t.components);return n.createElement(c.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},d=n.forwardRef((function(t,e){var r=t.components,o=t.mdxType,a=t.originalType,c=t.parentName,s=l(t,["components","mdxType","originalType","parentName"]),d=u(r),m=o,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||a;return r?n.createElement(f,i(i({ref:e},s),{},{components:r})):n.createElement(f,i({ref:e},s))}));function m(t,e){var r=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var a=r.length,i=new Array(a);i[0]=d;var l={};for(var c in e)hasOwnProperty.call(e,c)&&(l[c]=e[c]);l.originalType=t,l.mdxType="string"==typeof t?t:o,i[1]=l;for(var u=2;u<a;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},397:function(t,e,r){"use strict";r.r(e),r.d(e,{frontMatter:function(){return i},metadata:function(){return l},toc:function(){return c},default:function(){return s}});var n=r(2122),o=r(9756),a=(r(7294),r(3905)),i={id:"util_rotation",title:"Module: util/rotation",sidebar_label:"util/rotation",sidebar_position:0,custom_edit_url:null},l={unversionedId:"api/modules/util_rotation",id:"api/modules/util_rotation",isDocsHomePage:!1,title:"Module: util/rotation",description:"Functions",source:"@site/docs/api/modules/util_rotation.md",sourceDirName:"api/modules",slug:"/api/modules/util_rotation",permalink:"/docs/api/modules/util_rotation",editUrl:null,version:"current",sidebar_label:"util/rotation",sidebarPosition:0,frontMatter:{id:"util_rotation",title:"Module: util/rotation",sidebar_label:"util/rotation",sidebar_position:0,custom_edit_url:null},sidebar:"api",previous:{title:"Module: util/lazy",permalink:"/docs/api/modules/util_lazy"},next:{title:"Module: util/rules",permalink:"/docs/api/modules/util_rules"}},c=[{value:"Functions",id:"functions",children:[{value:"rotationToNormal",id:"rotationtonormal",children:[]}]}],u={toc:c};function s(t){var e=t.components,r=(0,o.Z)(t,["components"]);return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"functions"},"Functions"),(0,a.kt)("h3",{id:"rotationtonormal"},"rotationToNormal"),(0,a.kt)("p",null,"\u25b8 ",(0,a.kt)("strong",{parentName:"p"},"rotationToNormal"),"(",(0,a.kt)("inlineCode",{parentName:"p"},"rotation"),"): ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/classes/components_vector.vector"},"Vector")),(0,a.kt)("p",null,"Converts the specified euler rotation (in degrees) into the corresponding normal vector."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"remarks")),"\nThe normal is calculated by placing a (figurative) plane in a coordinate-system's\norigin, and rotating it by the specified angles. Note that the z-component of the\nrotation is irrelevant for the normal and can be ignored. Then, two vectors\ndescribing the orientation of the plane are calculated. Their cross product\ndenotes the normal vector."),(0,a.kt)("h4",{id:"parameters"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"rotation")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"/docs/api/classes/components_vector.vector"},"Vector")),(0,a.kt)("td",{parentName:"tr",align:"left"},"The euler rotation angles (in degrees) to calculate the normal for.")))),(0,a.kt)("h4",{id:"returns"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/api/classes/components_vector.vector"},"Vector")),(0,a.kt)("h4",{id:"defined-in"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/yiliansource/party-js/blob/42b74b3/src/util/rotation.ts#L16"},"util/rotation.ts:16")))}s.isMDXComponent=!0}}]);